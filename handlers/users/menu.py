import datetime
from loader import dp, bot
from aiogram.dispatcher.filters import Command, Text
from aiogram.types import Message, ReplyKeyboardRemove
from database import db_table_user_dinner, db_table_user_dinner_tomorrow
from keyboards.default.menu import menu_garnish, menu_entree, menu_time, yes_no, menu_garnish_tomorrow, menu_entree_tomorrow, menu_time_tomorrow
    

@dp.message_handler(Command('start'))
async def bot_start(message:Message):
    await bot.send_message(message.from_user.id, '–ü—Ä–∏–≤–µ—Ç, –¥–∞–≤–∞–π —Å–æ—Å—Ç–∞–≤–∏–º —Ç–≤–æ–π —É–∂–∏–Ωü§§\n–ñ–º—è–∫–Ω–∏ /menu')
    # log(message)
    

@dp.message_handler(Command('menu'))
async def show_menu(message:Message):
    await message.answer('–í—ã–±–µ—Ä–∏ –∫–∞–∫–æ–π –≥–∞—Ä–Ω–∏—Ä —Ö–æ—á–µ—à—å –Ω–∞ —É–∂–∏–Ω',
    reply_markup = menu_garnish)
    # log(message)
        

@dp.message_handler(Text(equals=['–ü–∞—Å—Ç–∞', '–ì—Ä–µ—á–∫–∞', '–ö—É—Å-–∫—É—Å', '–ß–µ—á–µ–≤–∏—Ü–∞']))
async def get_garnish(message:Message):
    global garnish
    garnish = message.text
    await message.answer(f'–¢—ã –≤—ã–±—Ä–∞–ª {garnish}. \n–¢–µ–ø–µ—Ä—å –≤—ã–±–µ—Ä–∏ —á—Ç–æ –±—É–¥–µ—à—å –∫ –≥–∞—Ä–Ω–∏—Ä—É', 
    reply_markup = menu_entree)
    # log(message)


@dp.message_handler(Text(equals=['–°–∞–ª–∞—Ç', '–°—ã—Ä','–¢—É—à–µ–Ω—ã–µ –æ–≤–æ—â–∏', '–ñ–∞—Ä–µ–Ω–∞—è –∫—É—Ä–∏—Ü–∞', '–ì–∞—Ä–Ω–∏—Ä–∞ —Ö–≤–∞—Ç–∏—Ç –≤–ø–æ–ª–Ω–µüëå', '–û–±—Ä–∞—Ç–Ω–æ –∫ –≥–∞—Ä–Ω–∏—Ä—É']))
async def get_entree(message:Message):
    global entree
    entree = message.text
    if entree == '–û–±—Ä–∞—Ç–Ω–æ –∫ –≥–∞—Ä–Ω–∏—Ä—É':
        await message.answer(f'–í—ã –≤–µ—Ä–Ω—É–ª–∏—Å—å –∫ –≤—ã–±–æ—Ä—É –≥–∞—Ä–Ω–∏—Ä–∞',
        reply_markup = menu_garnish)
    else:
        await message.answer(f'–¢—ã –≤—ã–±—Ä–∞–ª {entree}. \n–ê —Ç–µ–ø–µ—Ä—å –≤—ã–±–µ—Ä–∏ —É–¥–æ–±–Ω–æ–µ –≤—Ä–µ–º—è',
        reply_markup = menu_time)
        # log(message)


@dp.message_handler(Text(equals=['18:00', '19:00', '–î–∞–≤–∞–π —Å–µ–≥–æ–¥–Ω—è –ø–æ–ø–æ–∑–∂–µ', '–û–±—Ä–∞—Ç–Ω–æ –∫ –æ—Å–Ω–æ–≤–Ω–æ–º—É –±–ª—é–¥—É']))
async def get_time(message:Message):
    global time
    time = message.text
    if message.text == '–û–±—Ä–∞—Ç–Ω–æ –∫ –æ—Å–Ω–æ–≤–Ω–æ–º—É –±–ª—é–¥—É':
        await message.answer(f'–í—ã –≤–µ—Ä–Ω—É–ª–∏—Å—å –∫ –≤—ã–±–æ—Ä—É –æ—Å–Ω–æ–≤–Ω–æ–≥–æ –±–ª—é–¥–∞',
        reply_markup = menu_entree)
    else:
        await message.answer(f'–ò—Ç–∞–∫, —Ç–≤–æ–π —É–∂–∏–Ω —ç—Ç–æ {garnish} —Å {entree} –∏ —Å–æ—Å—Ç–æ–∏—Ç—Å—è –æ–Ω –≤ {time}.\n–ü—Ä–∏—è—Ç–Ω–æ–≥–æ –∞–ø–ø–µ—Ç–∏—Ç–∞üçΩ \n–ú–æ–∂–µ—Ç —Ö–æ—á–µ—à—å —Å–æ—Å—Ç–∞–≤–∏—Ç—å —É–∂–∏–Ω –Ω–∞ –∑–∞–≤—Ç—Ä–∞?',
        reply_markup = yes_no)
        # log(message)

        
        time_now = datetime.datetime.now()

        user_id = message.from_user.id
        user_data = time_now.strftime("%d-%m-%Y")
        user_time = time_now.strftime("%H:%M")
        user_fname = message.from_user.first_name
        user_sname = message.from_user.last_name

        user_gar = garnish
        user_ent = entree
        user_dintime = time

        db_table_user_dinner(user_id = user_id, data = user_data, time = user_time, user_first_name = user_fname, user_surname = user_sname, user_garnish = user_gar,
                        user_entree = user_ent, user_dinner_time = user_dintime)

        time_now = datetime.datetime.now()

        user_id = message.from_user.id
        user_data = time_now.strftime("%d-%m-%Y")
        user_time = time_now.strftime("%H:%M")
        user_fname = None
        user_sname = None

        user_gartomorrow = None
        user_enttomorrow = None
        user_dintime_tomorrow = None

        db_table_user_dinner_tomorrow(user_id = user_id, data = user_data, time = user_time, user_first_name = user_fname, user_surname = user_sname, user_garnish_tomorrow = user_gartomorrow, 
                        user_entree_tomorrow = user_enttomorrow, user_dinner_time_tomorrow = user_dintime_tomorrow)


@dp.message_handler(Text(equals=['–î–∞', '–ù–µ—Ç']))
async def get_yes_no(message:Message):
    yes_no = message.text
    if message.text == '–î–∞':
        await message.answer('–°–æ—Å—Ç–∞–≤–∏–º —É–∂–∏–Ω –Ω–∞ –∑–∞–≤—Ç—Ä–∞üòã', reply_markup = menu_garnish_tomorrow)
        # log(message)
    else:
        await message.answer(f'–ù–µ —Å–º–µ—é –∑–∞–¥–µ—Ä–∂–∏–≤–∞—Ç—åüñê',
        reply_markup = ReplyKeyboardRemove())
        # log(message)



@dp.message_handler(Text(equals=['–ü—é—Ä–µ', '–†–∏—Å', '–ë—É–ª–≥—É—Ä']))
async def get_garnish_tomorrow(message:Message):
    global garnish_tomorrow
    garnish_tomorrow = message.text
    await message.answer(f'–ù–∞ –∑–∞–≤—Ç—Ä–∞ —Ç—ã –≤—ã–±—Ä–∞–ª {garnish_tomorrow}. \n–¢–µ–ø–µ—Ä—å –≤—ã–±–µ—Ä–∏ —á—Ç–æ –±—É–¥–µ—à—å –∫ –≥–∞—Ä–Ω–∏—Ä—É', 
    reply_markup = menu_entree_tomorrow)
    # log(message)


@dp.message_handler(Text(equals=['–°–≤–µ–∂–∏–µ –æ–≤–æ—â–∏', '–û–≤–æ—â–∏ –Ω–∞ –ø–∞—Ä—É', '–õ–µ–≥–∫–∏–π —Å–∞–ª–∞—Ç', '–ú—è—Å–Ω–æ–π —Å–æ—É—Å', '–ì–∞—Ä–Ω–∏—Ä–∞ —Ö–≤–∞—Ç–∏—Çüëå', '–ù–∞–∑–∞–¥ –∫ –≥–∞—Ä–Ω–∏—Ä—É']))
async def get_entree_tomorrow(message:Message):
    global entree_tomorrow
    entree_tomorrow = message.text
    if entree_tomorrow == '–ù–∞–∑–∞–¥ –∫ –≥–∞—Ä–Ω–∏—Ä—É':
        await message.answer(f'–í—ã –≤–µ—Ä–Ω—É–ª–∏—Å—å –∫ –≤—ã–±–æ—Ä—É –≥–∞—Ä–Ω–∏—Ä–∞',
        reply_markup = menu_garnish_tomorrow)
    else:
        await message.answer(f'–ù–∞ –∑–∞–≤—Ç—Ä–∞ —Ç—ã –≤—ã–±—Ä–∞–ª {entree_tomorrow}. \n–ê —Ç–µ–ø–µ—Ä—å –≤—ã–±–µ—Ä–∏ —É–¥–æ–±–Ω–æ–µ –≤—Ä–µ–º—è',
        reply_markup = menu_time_tomorrow)
        # log(message)

            

@dp.message_handler(Text(equals=['18:30', '19:30', '–î–∞–≤–∞–π –ø–æ–ø–æ–∑–∂–µ', '–ù–∞–∑–∞–¥ –∫ –æ—Å–Ω–æ–≤–Ω–æ–º—É –±–ª—é–¥—É']))
async def get_time_tomorrow(message:Message):
    global time_tomorrow
    time_tomorrow = message.text
    if time_tomorrow == '–ù–∞–∑–∞–¥ –∫ –æ—Å–Ω–æ–≤–Ω–æ–º—É –±–ª—é–¥—É':
        await message.answer(f'–í—ã –≤–µ—Ä–Ω—É–ª–∏—Å—å –∫ –≤—ã–±–æ—Ä—É –æ—Å–Ω–æ–≤–Ω–æ–≥–æ –±–ª—é–¥–∞',
        reply_markup = menu_entree_tomorrow)
    else:
        await message.answer(f'–ò —Ç–∞–∫, —Ç–≤–æ–π —É–∂–∏–Ω –Ω–∞ –∑–∞–≤—Ç—Ä–∞ —ç—Ç–æ {garnish_tomorrow} —Å {entree_tomorrow} –∏ —Å–æ—Å—Ç–æ–∏—Ç—Å—è –æ–Ω –≤ {time_tomorrow}.\n–ü—Ä–∏—è—Ç–Ω–æ–≥–æ –∞–ø–ø–µ—Ç–∏—Ç–∞üçΩ',
        reply_markup = ReplyKeyboardRemove())
        # log(message)
 
        time_now = datetime.datetime.now()

        user_id = message.from_user.id
        user_data = time_now.strftime("%d-%m-%Y")
        user_time = time_now.strftime("%H:%M")
        user_fname = message.from_user.first_name
        user_sname = message.from_user.last_name

        user_gartomorrow = garnish_tomorrow
        user_enttomorrow = entree_tomorrow
        user_dintime_tomorrow = time_tomorrow

        db_table_user_dinner_tomorrow(user_id = user_id, data = user_data, time = user_time, user_first_name = user_fname, user_surname = user_sname, user_garnish_tomorrow = user_gartomorrow, 
                        user_entree_tomorrow = user_enttomorrow, user_dinner_time_tomorrow = user_dintime_tomorrow)
